name: Build Container Images

on:
  push:
    tags:
      - "image/v*"
    paths-ignore:
      - "charts/**"
  pull_request:
    branches: [master]
    paths-ignore:
      - "charts/**"
env:
  IMAGES: docker.io/hapiproject/hapi
  PLATFORMS: linux/amd64,linux/arm64
  GHA_CACHE_SCOPE: hapi-fhir-jpaserver-starter

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Container meta for default (distroless) image
        id: docker_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGES }}
          tags: |
            type=match,pattern=image/(.*),group=1,enable=${{github.event_name != 'pull_request'}}
           

      - name: Container meta for tomcat image
        id: docker_tomcat_meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGES }}
          tags: |
            type=match,pattern=image/(.*),group=1,enable=${{github.event_name != 'pull_request'}}
          flavor: |
            suffix=-tomcat,onlatest=true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push default (distroless) image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          target: default
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          cache-from: type=gha,scope=${{ env.GHA_CACHE_SCOPE }}
          cache-to: type=gha,mode=max,scope=${{ env.GHA_CACHE_SCOPE }}

      - name: Build and push tomcat image
        id: docker_build_tomcat
        uses: docker/build-push-action@v5
        with:
          context: .
          target: tomcat
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_tomcat_meta.outputs.tags }}
          labels: ${{ steps.docker_tomcat_meta.outputs.labels }}
          cache-from: type=gha,scope=${{ env.GHA_CACHE_SCOPE }}
          cache-to: type=gha,mode=max,scope=${{ env.GHA_CACHE_SCOPE }}